// generated by Fast Light User Interface Designer (fluid) version 1.0305

#ifndef LABSoft_GUI_h
#define LABSoft_GUI_h
#include <FL/Fl.H>
#include "LAB.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Input_Choice.H>
#include "LABSoft_Oscilloscope_Display.h"
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Choice.H>
#include "LABSoft_Function_Generator_Display.h"
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_File_Browser.H>

class LABSoft_GUI {
  struct DPF {LABSoft_Function_Generator_Display *disp; Fl_Input_Choice *w1; Fl_Input_Choice *w2;};
  LAB *m_LAB; 
public:
  LABSoft_GUI(int argc, char** argv, LAB *_LAB);
  Fl_Double_Window *fl_window_main;
  Fl_Light_Button *oscilloscope_light_button_enable_disable;
private:
  inline void cb_oscilloscope_light_button_enable_disable_i(Fl_Light_Button*, void*);
  static void cb_oscilloscope_light_button_enable_disable(Fl_Light_Button*, void*);
public:
  Fl_Group *oscilloscope_fl_group_horizontal;
  Fl_Box *oscilloscope_fl_box_horizontal_box;
  Fl_Input_Choice *oscilloscope_fl_input_choice_horizontal_position;
  static Fl_Menu_Item menu_oscilloscope_fl_input_choice_horizontal_position[];
  Fl_Input_Choice *oscilloscope_fl_input_choice_horizontal_seconds_division;
  static Fl_Menu_Item menu_oscilloscope_fl_input_choice_horizontal_seconds_division[];
  Fl_Group *oscilloscope_fl_group_vertical;
  Fl_Box *oscilloscope_fl_box_vertical_box;
  Fl_Input_Choice *oscilloscope_fl_input_choice_vertical_offset;
  static Fl_Menu_Item menu_oscilloscope_fl_input_choice_vertical_offset[];
  Fl_Input_Choice *oscilloscope_fl_input_choice_vertical_volts_division;
  static Fl_Menu_Item menu_oscilloscope_fl_input_choice_vertical_volts_division[];
  Fl_Group *oscilloscope_fl_group_display;
  LABSoft_Oscilloscope_Display *oscilloscope_fl_box_oscilloscope_display;
  Fl_Value_Output *voltmeter_fl_value_output_reading;
  static Fl_Menu_Item menu_[];
  Fl_Light_Button *voltmeter_fl_light_button_enable_disable;
  Fl_Value_Output *ammeter_fl_value_output_reading;
  static Fl_Menu_Item menu_1[];
  Fl_Light_Button *ammeter_fl_light_button_enable_disable;
  Fl_Value_Output *ohmmeter_fl_value_output_reading;
  static Fl_Menu_Item menu_2[];
  Fl_Light_Button *ohmmeter_fl_light_button_enable_disable;
  Fl_Light_Button *function_generator_fl_light_button_start_stop;
private:
  inline void cb_function_generator_fl_light_button_start_stop_i(Fl_Light_Button*, void*);
  static void cb_function_generator_fl_light_button_start_stop(Fl_Light_Button*, void*);
public:
  LABSoft_Function_Generator_Display *function_generator_fl_box_function_generator_display;
  Fl_Group *function_generator_fl_group_horizontal;
  Fl_Input_Choice *function_generator_fl_input_choice_horizontal_position;
  static Fl_Menu_Item menu_function_generator_fl_input_choice_horizontal_position[];
  Fl_Input_Choice *function_generator_fl_input_choice_time_per_division;
  static Fl_Menu_Item menu_function_generator_fl_input_choice_time_per_division[];
  Fl_Group *function_generator_fl_group_vertical;
  Fl_Input_Choice *function_generator_fl_input_choice_vertical_offset;
  static Fl_Menu_Item menu_function_generator_fl_input_choice_vertical_offset[];
  Fl_Input_Choice *function_generator_fl_input_choice_volts_per_division;
  static Fl_Menu_Item menu_function_generator_fl_input_choice_volts_per_division[];
  Fl_Group *function_generator_fl_group_function_generator_parameters;
  Fl_Input_Choice *function_generator_fl_input_choice_wave_type;
private:
  inline void cb_function_generator_fl_input_choice_wave_type_i(Fl_Input_Choice*, void*);
  static void cb_function_generator_fl_input_choice_wave_type(Fl_Input_Choice*, void*);
  static Fl_Menu_Item menu_function_generator_fl_input_choice_wave_type[];
public:
  Fl_Input_Choice *function_generator_fl_input_choice_frequency;
private:
  inline void cb_function_generator_fl_input_choice_frequency_i(Fl_Input_Choice*, void*);
  static void cb_function_generator_fl_input_choice_frequency(Fl_Input_Choice*, void*);
  static Fl_Menu_Item menu_function_generator_fl_input_choice_frequency[];
public:
  Fl_Input_Choice *function_generator_fl_input_choice_period;
private:
  inline void cb_function_generator_fl_input_choice_period_i(Fl_Input_Choice*, void*);
  static void cb_function_generator_fl_input_choice_period(Fl_Input_Choice*, void*);
  static Fl_Menu_Item menu_function_generator_fl_input_choice_period[];
public:
  Fl_Input_Choice *function_generator_fl_input_choice_amplitude;
private:
  inline void cb_function_generator_fl_input_choice_amplitude_i(Fl_Input_Choice*, void*);
  static void cb_function_generator_fl_input_choice_amplitude(Fl_Input_Choice*, void*);
  static Fl_Menu_Item menu_function_generator_fl_input_choice_amplitude[];
  static Fl_Menu_Item menu_Offset[];
public:
  Fl_Light_Button *power_supply_fl_light_button_enable_disable;
  Fl_Button *circuit_checker_fl_button_start;
  ~LABSoft_GUI();
  void make_window();
};
#endif
