// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "LABChecker_GUI.h"

Fl_Double_Window *main_fl_window=(Fl_Double_Window *)0;

Fl_Menu_Item menu_[] = {
 {"File", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Exit", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Settings", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Input_Choice *simple_dc_fl_input_choice_dc_output=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_dc_fl_input_choice_dc_input=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_dc_fl_input_choice_samples=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_dc_fl_input_choice_sampling_rate=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_dc_fl_input_choice_base=(Fl_Input_Choice *)0;

Fl_Button *simple_dc_fl_button_create_file=(Fl_Button *)0;

Fl_Menu_Item menu_Bits[] = {
 {"1", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"2", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"3", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"4", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"5", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"6", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"7", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"8", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Button *simple_dc_fl_button_create_file=(Fl_Button *)0;

int main(int argc, char **argv) {
  { main_fl_window = new Fl_Double_Window(1366, 768, "LABChecker 0.1");
    main_fl_window->color(FL_LIGHT2);
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 1366, 30);
      o->box(FL_FLAT_BOX);
      o->color(FL_LIGHT3);
      o->menu(menu_);
    } // Fl_Menu_Bar* o
    { Fl_Tabs* o = new Fl_Tabs(0, 30, 1366, 738);
      o->box(FL_FLAT_BOX);
      o->color(FL_LIGHT3);
      o->selection_color(FL_LIGHT3);
      { Fl_Group* o = new Fl_Group(0, 60, 1366, 708, "Analog Checker - Simple DC");
        o->box(FL_FLAT_BOX);
        o->color(FL_LIGHT3);
        o->selection_color(FL_LIGHT3);
        o->hide();
        { Fl_Group* o = new Fl_Group(398, 155, 180, 350, "Input");
          o->box(FL_ROUNDED_FRAME);
          { simple_dc_fl_input_choice_dc_output = new Fl_Input_Choice(428, 205, 120, 25, "DC Output");
            simple_dc_fl_input_choice_dc_output->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_dc_fl_input_choice_dc_output
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(793, 150, 180, 350, "Output");
          o->box(FL_ROUNDED_FRAME);
          { simple_dc_fl_input_choice_dc_input = new Fl_Input_Choice(823, 205, 120, 25, "Expected DC Input");
            simple_dc_fl_input_choice_dc_input->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_dc_fl_input_choice_dc_input
          { simple_dc_fl_input_choice_samples = new Fl_Input_Choice(823, 275, 120, 25, "Samples");
            simple_dc_fl_input_choice_samples->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_dc_fl_input_choice_samples
          { simple_dc_fl_input_choice_sampling_rate = new Fl_Input_Choice(823, 345, 120, 25, "Sampling Rate");
            simple_dc_fl_input_choice_sampling_rate->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_dc_fl_input_choice_sampling_rate
          { simple_dc_fl_input_choice_base = new Fl_Input_Choice(823, 415, 120, 25, "Base");
            simple_dc_fl_input_choice_base->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_dc_fl_input_choice_base
          o->end();
        } // Fl_Group* o
        { simple_dc_fl_button_create_file = new Fl_Button(608, 555, 150, 60, "Create File");
          simple_dc_fl_button_create_file->box(FL_GTK_UP_BOX);
          simple_dc_fl_button_create_file->color((Fl_Color)55);
        } // Fl_Button* simple_dc_fl_button_create_file
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(0, 60, 1366, 708, "Digital Checker");
        o->box(FL_FLAT_BOX);
        o->color(FL_LIGHT3);
        { Fl_Group* o = new Fl_Group(60, 120, 180, 180, "Inputs");
          o->box(FL_ROUNDED_FRAME);
          { Fl_Choice* o = new Fl_Choice(90, 155, 120, 30, "Bits");
            o->down_box(FL_BORDER_BOX);
            o->align(Fl_Align(FL_ALIGN_TOP));
            o->menu(menu_Bits);
          } // Fl_Choice* o
          { Fl_Input_Choice* o = new Fl_Input_Choice(90, 235, 120, 30, "Outputs (Max: 0)");
            o->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* o
          o->end();
        } // Fl_Group* o
        { simple_dc_fl_button_create_file = new Fl_Button(608, 650, 150, 60, "Create File");
          simple_dc_fl_button_create_file->box(FL_GTK_UP_BOX);
          simple_dc_fl_button_create_file->color((Fl_Color)55);
        } // Fl_Button* simple_dc_fl_button_create_file
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Tabs* o
    main_fl_window->end();
  } // Fl_Double_Window* main_fl_window
  main_fl_window->show(argc, argv);
  return Fl::run();
}
