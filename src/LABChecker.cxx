// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "LABChecker.h"

Fl_Menu_Item menu_[] = {
 {"File", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Exit", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Settings", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Group *simple_wizard_fl_group_output=(Fl_Group *)0;

Fl_Choice *simple_wizard_fl_input_choice_output_type=(Fl_Choice *)0;

Fl_Menu_Item menu_simple_wizard_fl_input_choice_output_type[] = {
 {"Sine", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Square", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Triangle", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"DC", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Input_Choice *simple_wizard_fl_input_choice_output_amplitude=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_wizard_fl_input_choice_output_frequency=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_wizard_fl_input_choice_output_duration=(Fl_Input_Choice *)0;

Fl_Group *simple_wizard_fl_group_input=(Fl_Group *)0;

Fl_Choice *simple_wizard_fl_choice_input_type=(Fl_Choice *)0;

Fl_Menu_Item menu_simple_wizard_fl_choice_input_type[] = {
 {"Sine", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Square", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Triangle", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"DC", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Input_Choice *simple_wizard_fl_input_choice_input_amplitude=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_wizard_fl_input_choice_input_frequency=(Fl_Input_Choice *)0;

Fl_Input_Choice *simple_wizard_fl_input_choice_input_duration=(Fl_Input_Choice *)0;

Fl_Button *simple_wizard_fl_button_generate=(Fl_Button *)0;

int main(int argc, char **argv) {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(1366, 768, "LABChecker 0.1");
    w = o; if (w) {/* empty */}
    o->color(FL_LIGHT2);
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 1366, 30);
      o->box(FL_FLAT_BOX);
      o->color(FL_LIGHT3);
      o->menu(menu_);
    } // Fl_Menu_Bar* o
    { Fl_Tabs* o = new Fl_Tabs(0, 30, 1366, 738);
      o->box(FL_FLAT_BOX);
      o->color(FL_LIGHT3);
      { Fl_Group* o = new Fl_Group(0, 60, 1366, 708, "Home");
        o->box(FL_FLAT_BOX);
        o->color(FL_LIGHT3);
        o->selection_color((Fl_Color)53);
        o->hide();
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(0, 60, 1366, 708, "Simple Wizard");
        o->box(FL_FLAT_BOX);
        o->color(FL_LIGHT3);
        o->selection_color((Fl_Color)53);
        { simple_wizard_fl_group_output = new Fl_Group(170, 160, 250, 440, "Output");
          simple_wizard_fl_group_output->box(FL_FLAT_BOX);
          simple_wizard_fl_group_output->color(FL_LIGHT2);
          { simple_wizard_fl_input_choice_output_type = new Fl_Choice(205, 205, 180, 60, "Type");
            simple_wizard_fl_input_choice_output_type->down_box(FL_BORDER_BOX);
            simple_wizard_fl_input_choice_output_type->align(Fl_Align(FL_ALIGN_TOP));
            simple_wizard_fl_input_choice_output_type->menu(menu_simple_wizard_fl_input_choice_output_type);
          } // Fl_Choice* simple_wizard_fl_input_choice_output_type
          { simple_wizard_fl_input_choice_output_amplitude = new Fl_Input_Choice(205, 305, 180, 60, "Amplitude");
            simple_wizard_fl_input_choice_output_amplitude->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_wizard_fl_input_choice_output_amplitude
          { simple_wizard_fl_input_choice_output_frequency = new Fl_Input_Choice(205, 400, 180, 60, "Frequency");
            simple_wizard_fl_input_choice_output_frequency->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_wizard_fl_input_choice_output_frequency
          { simple_wizard_fl_input_choice_output_duration = new Fl_Input_Choice(205, 500, 180, 60, "Duration");
            simple_wizard_fl_input_choice_output_duration->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_wizard_fl_input_choice_output_duration
          simple_wizard_fl_group_output->end();
        } // Fl_Group* simple_wizard_fl_group_output
        { simple_wizard_fl_group_input = new Fl_Group(558, 160, 250, 440, "Expected Input");
          simple_wizard_fl_group_input->box(FL_FLAT_BOX);
          simple_wizard_fl_group_input->color(FL_LIGHT2);
          { simple_wizard_fl_choice_input_type = new Fl_Choice(593, 205, 180, 60, "Type");
            simple_wizard_fl_choice_input_type->down_box(FL_BORDER_BOX);
            simple_wizard_fl_choice_input_type->align(Fl_Align(FL_ALIGN_TOP));
            simple_wizard_fl_choice_input_type->menu(menu_simple_wizard_fl_choice_input_type);
          } // Fl_Choice* simple_wizard_fl_choice_input_type
          { simple_wizard_fl_input_choice_input_amplitude = new Fl_Input_Choice(593, 305, 180, 60, "Amplitude");
            simple_wizard_fl_input_choice_input_amplitude->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_wizard_fl_input_choice_input_amplitude
          { simple_wizard_fl_input_choice_input_frequency = new Fl_Input_Choice(593, 400, 180, 60, "Frequency");
            simple_wizard_fl_input_choice_input_frequency->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_wizard_fl_input_choice_input_frequency
          { simple_wizard_fl_input_choice_input_duration = new Fl_Input_Choice(593, 500, 180, 60, "Duration");
            simple_wizard_fl_input_choice_input_duration->align(Fl_Align(FL_ALIGN_TOP));
          } // Fl_Input_Choice* simple_wizard_fl_input_choice_input_duration
          simple_wizard_fl_group_input->end();
        } // Fl_Group* simple_wizard_fl_group_input
        { simple_wizard_fl_button_generate = new Fl_Button(990, 340, 180, 60, "Generate Circuit Checker File");
          simple_wizard_fl_button_generate->box(FL_GTK_UP_BOX);
          simple_wizard_fl_button_generate->color((Fl_Color)53);
          simple_wizard_fl_button_generate->align(Fl_Align(FL_ALIGN_WRAP));
        } // Fl_Button* simple_wizard_fl_button_generate
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Tabs* o
    o->end();
  } // Fl_Double_Window* o
  w->show(argc, argv);
  return Fl::run();
}
